/* Generated By:JavaCC: Do not edit this line. MyParserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INT = 5;
  /** RegularExpression Id. */
  int FLOAT = 6;
  /** RegularExpression Id. */
  int STRING = 7;
  /** RegularExpression Id. */
  int DEF = 8;
  /** RegularExpression Id. */
  int BREAK = 9;
  /** RegularExpression Id. */
  int PRINT = 10;
  /** RegularExpression Id. */
  int READ = 11;
  /** RegularExpression Id. */
  int RETURN = 12;
  /** RegularExpression Id. */
  int NEW = 13;
  /** RegularExpression Id. */
  int NULL = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int PLUS = 18;
  /** RegularExpression Id. */
  int MINUS = 19;
  /** RegularExpression Id. */
  int MULT = 20;
  /** RegularExpression Id. */
  int DIV = 21;
  /** RegularExpression Id. */
  int OPENP = 22;
  /** RegularExpression Id. */
  int CLOSEP = 23;
  /** RegularExpression Id. */
  int OPENCB = 24;
  /** RegularExpression Id. */
  int CLOSECB = 25;
  /** RegularExpression Id. */
  int OPENB = 26;
  /** RegularExpression Id. */
  int CLOSEB = 27;
  /** RegularExpression Id. */
  int SEMIC = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int EQUALS = 30;
  /** RegularExpression Id. */
  int ASSIGN = 31;
  /** RegularExpression Id. */
  int GREAT = 32;
  /** RegularExpression Id. */
  int LESS = 33;
  /** RegularExpression Id. */
  int GREATEQ = 34;
  /** RegularExpression Id. */
  int LESSEQ = 35;
  /** RegularExpression Id. */
  int DIFF = 36;
  /** RegularExpression Id. */
  int MOD = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int ID = 40;
  /** RegularExpression Id. */
  int INT_CONST = 41;
  /** RegularExpression Id. */
  int FLOAT_CONST = 42;
  /** RegularExpression Id. */
  int STRING_CONST = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"int\"",
    "\"float\"",
    "\"string\"",
    "\"def\"",
    "\"break\"",
    "\"print\"",
    "\"read\"",
    "\"return\"",
    "\"new\"",
    "\"null\"",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\"==\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"%\"",
    "<LETTER>",
    "<DIGIT>",
    "<ID>",
    "<INT_CONST>",
    "<FLOAT_CONST>",
    "<STRING_CONST>",
  };

}
